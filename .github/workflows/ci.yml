name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  benchmarks:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-benchmark

      - name: Run Benches (hybrid search)
        run: |
          python bench/context/hybrid_search_bench.py > bench_hybrid.json || true
          python bench/context/upsert_bench.py > bench_upsert.json || true

      - name: Enforce Bench Thresholds
        run: |
          python - << 'PY'
          import json, sys
          def check(path, max_avg_ms):
              try:
                  with open(path) as f:
                      d=json.load(f)
                  avg=d.get('avg_ms') or d.get('avg_ms_per_doc') or 0
                  print(f"{path}: avg={avg}ms")
                  if avg and avg > max_avg_ms:
                      print(f"::error ::{path} avg {avg}ms exceeds {max_avg_ms}ms threshold")
                      return 1
              except Exception as e:
                  print(f"warning: could not read {path}: {e}")
              return 0
          rc=0
          rc |= check('bench_hybrid.json', 1000)
          rc |= check('bench_upsert.json', 1000)
          sys.exit(rc)
          PY

      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            bench_hybrid.json
            bench_upsert.json

  ctest:
    name: CTest Unit + Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install CMake & Python
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake python3 python3-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest "pydantic>=1.10,<3"

      - name: Configure (fresh build dir)
        run: cmake -S . -B build-ci -DPython3_EXECUTABLE=$(which python3)

      - name: Build
        run: cmake --build build-ci --config Release -- -j2

      - name: List CTest tests
        run: |
          cd build-ci
          ctest -N || true

      - name: Run CTest (verbose)
        run: |
          cd build-ci
          set -o pipefail
          ctest -VV --output-on-failure | tee ctest-output.txt

      - name: Print CTest log
        if: always()
        run: |
          if [ -f build-ci/Testing/Temporary/LastTest.log ]; then
            echo "----- LastTest.log -----"
            sed -n '1,400p' build-ci/Testing/Temporary/LastTest.log || true
          fi

      - name: Upload CTest Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ctest-log
          path: |
            build-ci/Testing/Temporary/LastTest.log
            build-ci/ctest-output.txt
